plugins {
	id 'fabric-loom' version '1.6-SNAPSHOT'
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	maven { url 'https://jitpack.io' }
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	implementation(include('com.github.Betrayd:web-speak:fe9df26e95'))
	

	// Include webspeak transitive dependencies
	include('org.eclipse.jetty:jetty-server:12.0.14')
	include('org.eclipse.jetty:jetty-http:12.0.14')
	include('org.eclipse.jetty:jetty-io:12.0.14')
	include('org.eclipse.jetty:jetty-util:12.0.14')
	include('org.eclipse.jetty.ee10:jetty-ee10-servlet:12.0.14')
	include('jakarta.servlet:jakarta.servlet-api:6.0.0')
	include('org.eclipse.jetty:jetty-security:12.0.14')
	include('org.eclipse.jetty:jetty-session:12.0.14')
	include('org.eclipse.jetty.ee10.websocket:jetty-ee10-websocket-jetty-server:12.0.14')
	include('org.eclipse.jetty.ee10:jetty-ee10-annotations:12.0.14')
	include('jakarta.annotation:jakarta.annotation-api:2.1.1')
	include('org.eclipse.jetty.ee10:jetty-ee10-plus:12.0.14')
	include('jakarta.enterprise:jakarta.enterprise.cdi-api:4.0.1')
	include('jakarta.enterprise:jakarta.enterprise.lang-model:4.0.1')
	include('jakarta.el:jakarta.el-api:5.0.0')
	include('jakarta.interceptor:jakarta.interceptor-api:2.1.0')
	include('jakarta.inject:jakarta.inject-api:2.0.1')
	include('jakarta.transaction:jakarta.transaction-api:2.0.1')
	include('org.eclipse.jetty:jetty-jndi:12.0.14')
	include('org.eclipse.jetty:jetty-plus:12.0.14')
	include('org.eclipse.jetty.ee10:jetty-ee10-webapp:12.0.14')
	include('org.eclipse.jetty:jetty-ee:12.0.14')
	include('org.eclipse.jetty:jetty-xml:12.0.14')
//	include('org.ow2.asm:asm:9.7')
//	include('org.ow2.asm:asm-commons:9.7')
//	include('org.ow2.asm:asm-tree:9.7')
	include('org.eclipse.jetty.ee10.websocket:jetty-ee10-websocket-servlet:12.0.14')
	include('org.eclipse.jetty.websocket:jetty-websocket-core-server:12.0.14')
	include('org.eclipse.jetty.websocket:jetty-websocket-core-common:12.0.14')
	include('org.eclipse.jetty.websocket:jetty-websocket-jetty-api:12.0.14')
	include('org.eclipse.jetty.websocket:jetty-websocket-jetty-common:12.0.14')
	include('org.eclipse.jetty.websocket:jetty-websocket-jetty-client:12.0.14')	
	include('org.eclipse.jetty:jetty-client:12.0.14')
	include('org.eclipse.jetty:jetty-alpn-client:12.0.14')
	include('org.eclipse.jetty.websocket:jetty-websocket-core-client:12.0.14')


	// include("io.javalin:javalin:6.3.0")
	// include("org.eclipse.jetty:jetty-server:11.0.23")
	// include("org.eclipse.jetty:jetty-http:11.0.23")
	// include("org.eclipse.jetty:jetty-io:11.0.23")
	// include("org.eclipse.jetty:jetty-util:11.0.23")
	// include("org.eclipse.jetty.toolchain:jetty-jakarta-servlet-api:5.0.2")
	// include("org.eclipse.jetty.websocket:websocket-jetty-server:11.0.23")
	// include("org.eclipse.jetty:jetty-servlet:11.0.23")
	// include("org.eclipse.jetty:jetty-security:11.0.23")
	// include("org.eclipse.jetty:jetty-webapp:11.0.23")
	// include("org.eclipse.jetty:jetty-xml:11.0.23")
	// include("org.eclipse.jetty.toolchain:jetty-jakarta-servlet-api:5.0.2")
	// include("org.eclipse.jetty.websocket:websocket-jetty-api:11.0.23")
	// include("org.eclipse.jetty.websocket:websocket-jetty-common:11.0.23")
	// include("org.eclipse.jetty.websocket:websocket-core-common:11.0.23")
	// include("org.eclipse.jetty.websocket:websocket-jetty-api:11.0.23")
	// include("org.eclipse.jetty.websocket:websocket-servlet:11.0.23")
	// include("org.eclipse.jetty.websocket:websocket-core-server:11.0.23")
	
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

// configure the maven publication
publishing {
	publications {
		create("mavenJava", MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}